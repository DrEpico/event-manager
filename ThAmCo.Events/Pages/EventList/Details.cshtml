@page
@model ThAmCo.Events.Pages.EventList.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-warning">
        @foreach(var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

<div>
    <h4>Event</h4>
    <hr />
    <div class="row">
        <!-- First Column -->
        <div class="col-md-6">
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Event.Title)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Event.Title)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Event.Date)
                </dt>
                <dd class="col-sm-8 ">
                    @if (Model.Event.isCancelled) 
                    {
                        <div class="text-danger font-weight-bold">
                            Cancelled
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.Event.Date)
                    }
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.Event.EventType)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.Event.EventType)
                </dd>
            </dl>
        </div>
        <!-- Second Column -->
        @if (Model.Venue != null && Model.Venue.Reference != null)
        {
            <div class="col-md-6">
                <dl class="row">
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Venue.Reference)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Venue.Reference)
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Venue)
                    </dt>
                    <dd class="col-sm-8">
                        @(Model.Event.VenueReference == null
                            ? "Unreserved"
                            : Html.DisplayFor(model => model.Venue.VenueCode))
                    </dd>
                    <dt class="col-sm-4">
                        @Html.DisplayNameFor(model => model.Venue.WhenMade)
                    </dt>
                    <dd class="col-sm-8">
                        @Html.DisplayFor(model => model.Venue.WhenMade)
                    </dd>
                </dl>
            </div>
        }
        else if (Model.Event.VenueReference == null)
        {
            <dt class="col-sm-3">
                Venue
            </dt>
            <dd class="col-sm-3">
                Unreserved
            </dd>
        }
        else
        {
            <dt class="col-sm-3">
                Venue
            </dt>
            <dd class="col-sm-3">
                Failed to fetch data
            </dd>
        }
    </div> @* TODO: Convert EventType and Venue acronyms to meaningful words using if's or something *@
    @* Backup JUSTIFICATION: EventType and VenueCode shoudn't need to be converted to words from acronyms 
                            because the user is assumed to be an employee and not a customer *@
    <div>
    <h4>Guests</h4>
    @if (Model.Event.GuestBookings.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Event.GuestBookings.First().Guest.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Event.GuestBookings.First().HasAttended)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var guest in Model.Event.GuestBookings.Where(gb => !gb.IsCancelled)) // Only include non-cancelled bookings
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => guest.Guest.Name)</td>
                        <td>@Html.DisplayFor(modelItem => guest.HasAttended)</td>
                        <td>
                            <form method="post" asp-page-handler="CancelBooking">
                                <input type="hidden" name="GuestBookingId" value="@guest.GuestBookingId" />
                                <input type="hidden" name="GuestBookingId" value="@guest.GuestBookingId" />
                                <input type="hidden" name="EventId" value="@Model.Event.EventId" />
                                <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to cancel this booking?')">
                                    Cancel
                                </button>
                            </form>
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="3">Total Guest Count: @Model.Event.GuestBookings.Count(gb => !gb.IsCancelled)</td> <!-- Show count of non-cancelled bookings -->
                </tr>
            </tbody>
        </table>
        //TODO: Add a new page for booking a guest onto an event for better UX instead of doing it within the same page. 
        //  Doing as a pop up would also work however.
    }
    else
    {
        <p>No guests found for this event</p>
    }
    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#addGuestModal">
        Add Guest
    </button>
    
    <h4>Staff</h4>
    @if (Model.Event.Staffings.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Role</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var staff in Model.Event.Staffings)
                {
                    <tr>
                        <td>@staff.Staff.Name</td>
                        <td>@staff.Staff.Role</td>
                        <td>
                            <form method="post" asp-page-handler="RemoveStaff">
                                <input type="hidden" name="StaffId" value="@staff.Staff.StaffId" />
                                <input type="hidden" name="EventId" value="@Model.Event.EventId" />
                                <button type="submit" class="btn btn-danger btn-sm">Remove</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No staff found for this event</p>
    }
    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#addStaffModal">
        Add Staff
    </button>
</div>
    @* <button type="button" class="btn" asp-page-handler="DeleteVenueReserving">test</button> *@
    <form method="post" asp-page-handler="DeleteVenueReservation">
        <input type="hidden" name="EventId" value="@Model.Event.EventId" />
        <input type="hidden" name="VenueReference" value="@Model.Event.VenueReference" />
        @if (!Model.Event.isCancelled)
        {
            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to cancel this event?')">
                Cancel Event
            </button>
        }
        else
        {
            //TODO: Potential rebook button?
        }
    </form>


<!-- Modal Structure -->
<div class="modal fade" id="addGuestModal" tabindex="-1" aria-labelledby="addGuestModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addGuestModalLabel">Add Guest</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addGuestForm" method="post" asp-page-handler="AddGuest">
                    <input type="hidden" name="EventId" value="@Model.Event.EventId" />
                    <div class="mb-3">
                        <label for="guestName" class="form-label">Fullname</label>
                        <input type="text" class="form-control" id="GuestName" name="GuestName" required>
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="email" required>
                        <label for="phone" class="form-label">Phone number</label>
                        <input type="text" class="form-control" id="email" name="phone" required>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Add Staff Modal -->
<div class="modal fade" id="addStaffModal" tabindex="-1" aria-labelledby="addStaffModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addStaffModalLabel">Add Staff</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addStaffForm" method="post" asp-page-handler="AddStaff">
                    <input type="hidden" name="EventId" value="@Model.Event.EventId" />

                    <div class="mb-3">
                        <label for="StaffId" class="form-label">Select Staff</label>
                        <select class="form-select" id="StaffId" name="StaffId" required>
                            <option value="">-- Select an Assistant --</option>
                            @foreach (var staff in Model.Assistants)
                            {
                                    <option value="@staff.StaffId">@staff.Name - @staff.Role</option>
                            }
                        </select>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Add</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-page="./Edit" asp-route-id="@Model.Event.EventId">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>
